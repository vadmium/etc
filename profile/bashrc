# Link or call from ~/.bashrc:
#. ~/proj/etc/profile/bashrc

# Generic shell ENV initialisation, named after Bash because of its special
# behaviour. Typically this can be appended to the skeleton ~/.bashrc file.

main() {
    set -o nounset
    
    alias ls='ls --color=auto'
    alias patch='patch --binary'
    
    HISTSIZE=2000
    HISTFILESIZE="$HISTSIZE"
    HISTCONTROL=erasedups
    
    shopt -s globstar
    shopt -s histreedit
    shopt -s histverify
    shopt -s no_empty_cmd_completion
    shopt -u progcomp
    opt - noclobber
    opt + hashall
    opt + histexpand
    
    # Manually remove duplicates in saved history because Bash only removes them
    # from memory for each new entry added, and saved entries are not removed
    # when appending the history file
    if test -n "${HISTFILE+set}" && test -e "$HISTFILE"; then
        local NEW CP_ATTR
        NEW="$HISTFILE~$$"
        
        if test "$(cp --version | sed -n '1 s/^.* \([0-9]\+\).*$/\1/p')" -gt 4
        then
            # Works in version 8.13, but not in 4.1
            CP_ATTR="cp --attributes-only --preserve=all"
        else
            CP_ATTR="cp --preserve"
        fi
        
        if ! {
            $CP_ATTR "$HISTFILE" "$NEW" &&
            awk '
                {line[NR] = $0; last[$0] = NR}
                END {for(i = 1; i <= NR; ++i)
                    if(last[line[i]] == i) print line[i]}
            ' "$HISTFILE" >| "$NEW" &&
            mv "$NEW" "$HISTFILE"
        }; then
            rm "$NEW"
        fi
    fi
    
    local CSI='\033['
    local FORMAT="'${CSI}1;41;37m[Exit %s]${CSI}0m\n'"
    if trap 'printf '"$FORMAT"' "$?" >&2' ERR 2> /dev/null; then
        opt - errtrace
    else
        PS1='$(
            EXIT="$?"
            if test "$EXIT" -ne 0; then
                # Direct to stderr because the trailing newline would be
                # stripped as it is substituted into the prompt string
                printf '"$FORMAT"' "$EXIT" >&2
            fi
        )'"$PS1"
    fi
    
    PROMPT_COMMAND=newline
    
    trap exit TERM  # Apparently ignored by default so that "kill 0" applies to process group except shell
}

# Avoid Dash aborting the whole script for unimplemented options
opt() {
    # Ignore the occasional "Broken pipe" message from the "set" command
    if set -o 2> /dev/null | grep -q "$2"; then
        set "$1"o "$2"
    fi
}

newline() {
    stty sane &&
    local CSI='\033[' &&
    printf "${CSI}1;37;46m"'$'"${CSI}0m"  # EOL marker
    printf '\b\b\b''\b''\b\b\b\b\b\b\b\b\b' &&  # Restore column position
    
    # Translate CR -> LF, but inhibit if at left margin
    stty onocr ocrnl &&
    printf '\r' &&
    stty -onocr -ocrnl &&
    
    printf '\r'
}

main
unset -f main opt
